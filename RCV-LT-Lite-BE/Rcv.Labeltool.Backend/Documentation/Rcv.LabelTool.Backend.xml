<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Rcv.LabelTool.Backend</name>
    </assembly>
    <members>
        <member name="T:Rcv.LabelTool.Backend.Configuration.OnPremiseConfiguration">
            <summary>
            Configuration for on premise file system locations where data
            of labeltool is stored.
            </summary>
        </member>
        <member name="P:Rcv.LabelTool.Backend.Configuration.OnPremiseConfiguration.TrainingDataDirectoryPath">
            <summary>
            File system path of training data.
            </summary>
        </member>
        <member name="P:Rcv.LabelTool.Backend.Configuration.OnPremiseConfiguration.ExportDataDirectoryPath">
            <summary>
            File system path of export data.
            </summary>
        </member>
        <member name="P:Rcv.LabelTool.Backend.Configuration.OnPremiseConfiguration.ShareDataDirectoryPath">
            <summary>
            File system path of share data.
            </summary>
        </member>
        <member name="P:Rcv.LabelTool.Backend.Configuration.OnPremiseConfiguration.ScriptWorkbenchDirectoryPath">
            <summary>
            File system path where workbench of script execution
            is hosted.
            </summary>
        </member>
        <member name="T:Rcv.LabelTool.Backend.Controllers.BaseTopicController">
            <summary>
            Abstract controller for operations which are based on topics.
            </summary>
        </member>
        <member name="T:Rcv.LabelTool.Backend.Controllers.BaseTopicController.ControllerTopicAction">
            <summary>
            Delegate for perform controller action with topic parameter.
            </summary>
            <returns>Action result of action</returns>
        </member>
        <member name="P:Rcv.LabelTool.Backend.Controllers.BaseTopicController.TopicService">
            <summary>
            Topic service to work with.
            </summary>
        </member>
        <member name="M:Rcv.LabelTool.Backend.Controllers.BaseTopicController.#ctor(Rcv.LabelTool.Contracts.Services.ITopicService)">
            <summary>
            Create a new instance with topicservice as base service for 
            topic operations.
            </summary>
            <param name="topicService">Topic service of controller</param>
        </member>
        <member name="M:Rcv.LabelTool.Backend.Controllers.BaseTopicController.Execute(System.Int64,Rcv.LabelTool.Backend.Controllers.BaseTopicController.ControllerTopicAction)">
            <summary>
            Perform action with topic parameter. Includes check of topicId
            for validity and conversion from topicId to topic.
            </summary>
            <param name="topicId">Id of topic to use</param>
            <param name="controllerAction">Action which should be performed</param>
            <returns>result of action</returns>
        </member>
        <member name="T:Rcv.LabelTool.Backend.Controllers.ImagesController">
            <summary>
            Controller for simple image operations.
            </summary>
        </member>
        <member name="P:Rcv.LabelTool.Backend.Controllers.ImagesController.ImageService">
            <summary>
            Image service to work with.
            </summary>
        </member>
        <member name="M:Rcv.LabelTool.Backend.Controllers.ImagesController.GetImage(System.Int64,System.String)">
            <summary>
            Get image from topic with given name.
            </summary>
            <param name="topicId">Id of topic where image is stored</param>
            <param name="imageId">Name of image</param>
            <returns>Image from topic</returns>
            <response code="200">Requested image</response>
            <response code="400">Image file name must be provided</response>
            <response code="404">The topic or image cannot be found</response>
            <response code="500">Unexpected error occures</response>
        </member>
        <member name="M:Rcv.LabelTool.Backend.Controllers.ImagesController.ImageCount(System.Int64)">
            <summary>
            Get number of images which are avaiable for topic with given topicId.
            </summary>
            <param name="topicId">Id of topic</param>
            <returns>Number of images in topic</returns>
            <response code="200">Number of images in topic</response>
            <response code="404">Topic with id not found</response>
            <response code="500">Unexpected error occures</response>
        </member>
        <member name="T:Rcv.LabelTool.Backend.Controllers.ImagesLabelController">
            <summary>
            Controller for image label operation.
            </summary>
        </member>
        <member name="M:Rcv.LabelTool.Backend.Controllers.ImagesLabelController.SaveOrUpdateLabels(System.Int64,System.String,System.Collections.Generic.IEnumerable{Rcv.LabelTool.Contracts.Models.Label})">
            <summary>
            Update labels of image with given imageId of topic with given topicId.
            Labels will be overwritten by provided labels-list.
            </summary>
            <param name="topicId">Id of topic where image is stored</param>
            <param name="imageId">Id of image to add labels</param>
            <param name="labels">Labels which are related to image</param>
            <returns>List of saved labels</returns>
            <response code="200">List of labels which have been saved</response>
            <response code="400">One or more parameters are not valid</response>
            <response code="404">Topic with id not found</response>
            <response code="500">Unexpected error occures</response>
        </member>
        <member name="T:Rcv.LabelTool.Backend.Controllers.NavigationController">
            <summary>
            Controller for navigation through topics in labeltool.
            </summary>
        </member>
        <member name="P:Rcv.LabelTool.Backend.Controllers.NavigationController.ImageService">
            <summary>
            Image service to work with.
            </summary>
        </member>
        <member name="M:Rcv.LabelTool.Backend.Controllers.NavigationController.Navigate(System.Int64,Rcv.LabelTool.Contracts.Parameters.NavigationParameter)">
            <summary>
            Navigate to imagelabel with index from NavigationParameter in topic.
            </summary>
            <param name="topicId">ID of topic for navigation</param>
            <param name="navigationParameter">Navigation parameters</param>
            <returns>Result of navigation</returns>
            <response code="200">Result of navigation</response>
            <response code="400">Parameters for navigation request are required</response>
            <response code="404">The topic cannot be found or No matching result found for request</response>
            <response code="500">Unexpected error occures</response>
        </member>
        <member name="M:Rcv.LabelTool.Backend.Controllers.NavigationController.PreviousBlank(System.Int64,Rcv.LabelTool.Contracts.Parameters.NavigationParameter)">
            <summary>
            Navigate to previous imagelabel which is blank (has no labels or segments) depending on
            current labeltool-mode from NavigationParameter. Navigation will be 
            performed from current index given at NavigationParameter.Index.
            </summary>
            <param name="topicId">ID of topic for navigation</param>
            <param name="navigationParameter">Navigation parameters</param>
            <returns>Result of navigation</returns>
            <response code="200">Result of navigation</response>
            <response code="400">Parameters for navigation request are required</response>
            <response code="404">The topic cannot be found or No matching result found for request</response>
            <response code="500">Unexpected error occures</response>
        </member>
        <member name="M:Rcv.LabelTool.Backend.Controllers.NavigationController.Previous(System.Int64,Rcv.LabelTool.Contracts.Parameters.NavigationParameter)">
            <summary>
            Navigate to previous imagelabel. Navigation will be 
            performed from current index given at NavigationParameter.Index.
            </summary>
            <param name="topicId">ID of topic for navigation</param>
            <param name="navigationParameter">Navigation parameters</param>
            <returns>Result of navigation</returns>
            <response code="200">Result of navigation</response>
            <response code="400">Parameters for navigation request are required</response>
            <response code="404">The topic cannot be found or No matching result found for request</response>
            <response code="500">Unexpected error occures</response>
        </member>
        <member name="M:Rcv.LabelTool.Backend.Controllers.NavigationController.Next(System.Int64,Rcv.LabelTool.Contracts.Parameters.NavigationParameter)">
            <summary>
            Navigate to next imagelabel. Navigation will be 
            performed from current index given at NavigationParameter.Index.
            </summary>
            <param name="topicId">ID of topic for navigation</param>
            <param name="navigationParameter">Navigation parameters</param>
            <returns>Result of navigation</returns>
            <response code="200">Result of navigation</response>
            <response code="400">Parameters for navigation request are required</response>
            <response code="404">The topic cannot be found or No matching result found for request</response>
            <response code="500">Unexpected error occures</response>
        </member>
        <member name="M:Rcv.LabelTool.Backend.Controllers.NavigationController.NextBlank(System.Int64,Rcv.LabelTool.Contracts.Parameters.NavigationParameter)">
            <summary>
            Navigate to next imagelabel which is blank (has no labels or segments) depending on
            current labeltool-mode at NavigationParameter.LabelMode. Navigation will be 
            performed from current index given at NavigationParameter.Index.
            </summary>
            <param name="topicId">ID of topic for navigation</param>
            <param name="navigationParameter">Navigation parameters</param>
            <returns>Result of navigation</returns>
            <response code="200">Result of navigation</response>
            <response code="400">Parameters for navigation request are required</response>
            <response code="404">The topic cannot be found or No matching result found for request</response>
            <response code="500">Unexpected error occures</response>
        </member>
        <member name="M:Rcv.LabelTool.Backend.Controllers.NavigationController.LastBlank(System.Int64,Rcv.LabelTool.Contracts.Parameters.NavigationParameter)">
            <summary>
            Reverse navigation to first imagelabel at end of topic which is blank.
            </summary>
            <param name="topicId">ID of topic for navigation</param>
            <param name="navigationParameter">Navigation parameters</param>
            <returns>Result of navigation</returns>
            <response code="200">Result of navigation</response>
            <response code="400">Parameters for navigation request are required</response>
            <response code="404">The topic cannot be found or No matching result found for request</response>
            <response code="500">Unexpected error occures</response>
        </member>
        <member name="M:Rcv.LabelTool.Backend.Controllers.NavigationController.Blank(System.Int64,Rcv.LabelTool.Contracts.Parameters.NavigationParameter)">
            <summary>
            Navigation to next imagelabel without labels or segments.
            If shuffle is true, it will navigate to a random imagelabel.
            </summary>
            <param name="topicId">ID of topic for navigation</param>
            <param name="navigationParameter">Navigation parameters</param>
            <returns>Result of navigation</returns>
            <response code="200">Result of navigation</response>
            <response code="400">Parameters for navigation request are required</response>
            <response code="404">The topic cannot be found or No matching result found for request</response>
            <response code="500">Unexpected error occures</response>
        </member>
        <member name="T:Rcv.LabelTool.Backend.Controllers.ObjectClassController">
            <summary>
            Controller for management of objectclasses.
            </summary>
        </member>
        <member name="M:Rcv.LabelTool.Backend.Controllers.ObjectClassController.GetObjectClasses(System.Int64)">
            <summary>
            Gets list of objectclasses for specified topic.
            </summary>
            <param name="topicId">Id of topic</param>
            <returns>List of objectclasses</returns>
            <response code="200">List of objectclasses</response>
            <response code="404">Topic with id not found</response>
            <response code="500">Unexpected error occures</response>
        </member>
        <member name="T:Rcv.LabelTool.Backend.Controllers.TopicsController">
            <summary>
            Controller for simple topic actions.
            </summary>
        </member>
        <member name="M:Rcv.LabelTool.Backend.Controllers.TopicsController.GetTopicsList">
            <summary>
            Get list of all topics.
            </summary>
            <returns>List of all topics</returns>
            <response code="200">List of all topics</response>        
            <response code="500">Unexpected error occures</response>
        </member>
        <member name="F:Rcv.LabelTool.Backend.Startup.CORS_POLICY_NAME">
            <summary>
            Name of CORS policy to use.
            </summary>
        </member>
        <member name="F:Rcv.LabelTool.Backend.Startup.APPLICATION_VERSION">
            <summary>
            Application version.
            </summary>
        </member>
        <member name="F:Rcv.LabelTool.Backend.Startup.APPLICATION_NAME">
            <summary>
            Name of application.
            </summary>
        </member>
        <member name="T:Rcv.LabelTool.Backend.ConfigurationExtensions">
            <summary>
            Extension for appsettings.json to get application configuration of labeltool backend.
            </summary>
        </member>
        <member name="M:Rcv.LabelTool.Backend.ConfigurationExtensions.GetOnPremiseConfiguration(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Get configuration for onPremise-Mode of labeltool backend. Defines where data is stored.
            </summary>
            <param name="configuration">Appsettings configuration</param>
            <returns>OnPremise-mode configuration</returns>
        </member>
        <member name="M:Rcv.LabelTool.Backend.ConfigurationExtensions.GetAppSettings(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Get appsettings configuration section from configuration.
            </summary>
            <param name="configuration">Configuration to get appsettings from</param>
            <returns>AppSettings configuration section</returns>
        </member>
        <member name="M:Rcv.LabelTool.Backend.ConfigurationExtensions.GetConfiguration``1(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            Get configuration from appsettings of type.
            </summary>
            <typeparam name="T">Type to get</typeparam>
            <param name="configuration">Appsettings configuration</param>
            <param name="configurationName">Name of configuration section</param>
            <returns>Typed configuration section</returns>
        </member>
        <member name="T:Rcv.LabelTool.Backend.ServiceCollectionExtensions">
            <summary>
            Extension methods for service context.
            </summary>
        </member>
        <member name="M:Rcv.LabelTool.Backend.ServiceCollectionExtensions.BindOnPremiseFileContainer(Microsoft.Extensions.DependencyInjection.IServiceCollection,Rcv.LabelTool.Backend.Configuration.OnPremiseConfiguration)">
            <summary>
            Bind all filecontainer which are located to traingingsdata-path.
            </summary>
            <param name="services">Current context of services</param>
            <param name="onPremiseConfiguration">Configuration for on premise file containers</param>
        </member>
        <member name="M:Rcv.LabelTool.Backend.ServiceCollectionExtensions.BindRepositories(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Bind all repositories which are necessary for labeltool.
            </summary>
            <param name="services">Current context of services</param>
        </member>
        <member name="M:Rcv.LabelTool.Backend.ServiceCollectionExtensions.BindServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Bind all services which are necessary for labeltool.
            </summary>
            <param name="services">Current context of services</param>
        </member>
        <member name="M:Rcv.LabelTool.Backend.ServiceCollectionExtensions.GetTrainingDataStore(System.IServiceProvider)">
            <summary>
            Get training datastore from service provider.
            </summary>
            <param name="serviceProvider">Current context of services</param>
            <returns>Training datastore</returns>
        </member>
        <member name="M:Rcv.LabelTool.Backend.ServiceCollectionExtensions.GetDataStore(System.IServiceProvider,Rcv.LabelTool.Contracts.Enumerations.EDataStoreType)">
            <summary>
            Get datastore by type from service provider.
            </summary>
            <param name="serviceProvider">Current context of services</param>
            <param name="dataStoreType">Type of datastore</param>
            <returns>Datastore of specified type</returns>
        </member>
        <member name="T:Rcv.LabelTool.Backend.Statics.CacheProfileNames">
            <summary>
            Static names of cache-profiles.
            </summary>
        </member>
        <member name="F:Rcv.LabelTool.Backend.Statics.CacheProfileNames.Default">
            <summary>
            Default cache profile.
            </summary>
        </member>
        <member name="F:Rcv.LabelTool.Backend.Statics.CacheProfileNames.Never">
            <summary>
            Cache profile for non-caching requests.
            </summary>
        </member>
    </members>
</doc>
